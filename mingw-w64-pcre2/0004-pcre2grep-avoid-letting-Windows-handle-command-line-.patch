From db8d11780deae530299f21acb2becd3b576707c2 Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Wed, 7 Dec 2022 11:10:54 +0100
Subject: [PATCH 4/7] pcre2grep: avoid letting Windows handle command-line
 encoding

PCRE2 internally uses a multi-byte encoding, while Windows uses wide
characters. That means that a `_spawnvp()` call will inherently try to
use the multi-byte -> UTF-16 conversion, and since Windows does not
_really_ understand UTF-8 as a multi-byte encoding, it will get it all
wrong.

So let's hand-roll that conversion to ensure it's UTF-8 -> UTF-16 and
nothing else.

This is required for the UTF-8 tests in `RunGrepTests` to pass.

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 src/pcre2grep.c | 24 ++++++++++++++++++++++--
 1 file changed, 22 insertions(+), 2 deletions(-)

diff --git a/src/pcre2grep.c b/src/pcre2grep.c
index d56bfb41..6dacdc54 100644
--- a/src/pcre2grep.c
+++ b/src/pcre2grep.c
@@ -2529,8 +2529,28 @@ while (length > 0)
 necessary, otherwise assume fork(). */
 
 #ifdef WIN32
-(void)fflush(stdout);
-result = _spawnvp(_P_WAIT, argsvector[0], (const char * const *)argsvector) != 0;
+  {
+    size_t size = 0, count = 1;
+    wchar_t **w0, *w1, **wargv;
+    int i;
+
+    for (i = 0; argsvector[i]; i++) {
+      count++;
+      size += MultiByteToWideChar(CP_UTF8, 0, argsvector[i], -1, NULL, 0);
+    }
+    wargv = malloc(count * sizeof(wchar_t *) + size * sizeof(wchar_t));
+    w0 = wargv;
+    w1 = (void *)(w0 + count);
+    for (i = 0; argsvector[i]; i++) {
+      *(w0++) = w1;
+      w1 += MultiByteToWideChar(CP_UTF8, 0, argsvector[i], -1, w1, size);
+    }
+    *w0 = NULL;
+
+    (void)fflush(stdout);
+    result = _wspawnvp(_P_WAIT, wargv[0], (const wchar_t * const*)wargv);
+    free(wargv);
+  }
 
 #elif defined __VMS
   {
-- 
2.48.1.windows.1

