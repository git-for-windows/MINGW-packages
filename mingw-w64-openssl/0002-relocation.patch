From c161f083c1cb357a1214eae377a1e35235f21aa7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D9=85=D9=87=D8=AF=D9=8A=20=D8=B4=D9=8A=D9=86=D9=88=D9=86?=
 =?UTF-8?q?=20=28Mehdi=20Chinoune=29?= <mehdi.chinoune@hotmail.com>
Date: Sat, 7 Jan 2023 08:19:23 +0100
Subject: [PATCH 2/4] relocation

openssl: update to 3.0.7
---
 crypto/build.info        |  2 +-
 crypto/engine/eng_list.c | 10 ++++++++--
 crypto/provider_core.c   | 10 ++++++++--
 crypto/x509/x509_def.c   | 25 +++++++++++++++++++++----
 4 files changed, 38 insertions(+), 9 deletions(-)

diff --git a/crypto/build.info b/crypto/build.info
index 2d5b22f..123ef52 100644
--- a/crypto/build.info
+++ b/crypto/build.info
@@ -107,7 +107,7 @@ SOURCE[../libcrypto]=$UTIL_COMMON \
         cversion.c info.c cpt_err.c ebcdic.c uid.c o_time.c o_dir.c \
         o_fopen.c getenv.c o_init.c init.c trace.c provider.c provider_child.c \
         punycode.c passphrase.c sleep.c deterministic_nonce.c quic_vlint.c \
-        time.c
+        time.c pathtools.c
 SOURCE[../providers/libfips.a]=$UTIL_COMMON
 
 SOURCE[../libcrypto]=$UPLINKSRC
diff --git a/crypto/engine/eng_list.c b/crypto/engine/eng_list.c
index ee9471a..00dbf3a 100644
--- a/crypto/engine/eng_list.c
+++ b/crypto/engine/eng_list.c
@@ -12,6 +12,7 @@
 #define OPENSSL_SUPPRESS_DEPRECATED
 
 #include "eng_local.h"
+#include "pathtools.h"
 
 /*
  * The linked-list of pointers to engine types. engine_list_head incorporates
@@ -458,8 +459,13 @@ ENGINE *ENGINE_by_id(const char *id)
      * Prevent infinite recursion if we're looking for the dynamic engine.
      */
     if (strcmp(id, "dynamic")) {
-        if ((load_dir = ossl_safe_getenv("OPENSSL_ENGINES")) == NULL)
-            load_dir = ENGINESDIR;
+        if ((load_dir = ossl_safe_getenv("OPENSSL_ENGINES")) == NULL) {
+            static char * reloc = NULL;
+            if (reloc == NULL) {
+                reloc = single_path_relocation_lib(OPENSSLBIN, ENGINESDIR);
+            }
+            load_dir = reloc;
+        }
         iterator = ENGINE_by_id("dynamic");
         if (!iterator || !ENGINE_ctrl_cmd_string(iterator, "ID", id, 0) ||
             !ENGINE_ctrl_cmd_string(iterator, "DIR_LOAD", "2", 0) ||
diff --git a/crypto/provider_core.c b/crypto/provider_core.c
index 297b281..ce365f6 100644
--- a/crypto/provider_core.c
+++ b/crypto/provider_core.c
@@ -30,6 +30,7 @@
 #include "internal/core.h"
 #include "provider_local.h"
 #include "crypto/context.h"
+#include "pathtools.h"
 #ifndef FIPS_MODULE
 # include <openssl/self_test.h>
 #endif
@@ -919,8 +920,13 @@ static int provider_init(OSSL_PROVIDER *prov)
 
             if (load_dir == NULL) {
                 load_dir = ossl_safe_getenv("OPENSSL_MODULES");
-                if (load_dir == NULL)
-                    load_dir = MODULESDIR;
+                if (load_dir == NULL) {
+                    static char * reloc = NULL;
+                    if (reloc == NULL) {
+                        reloc = single_path_relocation_lib(OPENSSLBIN, MODULESDIR);
+                    }
+                    load_dir = reloc;
+                }
             }
 
             DSO_ctrl(prov->module, DSO_CTRL_SET_FLAGS,
diff --git a/crypto/x509/x509_def.c b/crypto/x509/x509_def.c
index 2851fbc..bf62082 100644
--- a/crypto/x509/x509_def.c
+++ b/crypto/x509/x509_def.c
@@ -9,27 +9,44 @@
 
 #include <stdio.h>
 #include "internal/cryptlib.h"
+#include "pathtools.h"
 #include <openssl/crypto.h>
 #include <openssl/x509.h>
 
 const char *X509_get_default_private_dir(void)
 {
-    return X509_PRIVATE_DIR;
+    static char * reloc = NULL;
+    if (reloc == NULL) {
+        reloc = single_path_relocation_lib(OPENSSLBIN, X509_PRIVATE_DIR);
+    }
+    return reloc;
 }
 
 const char *X509_get_default_cert_area(void)
 {
-    return X509_CERT_AREA;
+    static char * reloc = NULL;
+    if (reloc == NULL) {
+        reloc = single_path_relocation_lib(OPENSSLBIN, X509_CERT_AREA);
+    }
+    return reloc;
 }
 
 const char *X509_get_default_cert_dir(void)
 {
-    return X509_CERT_DIR;
+    static char * reloc = NULL;
+    if (reloc == NULL) {
+        reloc = single_path_relocation_lib(OPENSSLBIN, X509_CERT_DIR);
+    }
+    return reloc;
 }
 
 const char *X509_get_default_cert_file(void)
 {
-    return X509_CERT_FILE;
+    static char * reloc = NULL;
+    if (reloc == NULL) {
+        reloc = single_path_relocation_lib(OPENSSLBIN, X509_CERT_FILE);
+    }
+    return reloc;
 }
 
 const char *X509_get_default_cert_dir_env(void)
